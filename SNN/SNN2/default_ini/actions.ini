[print]
type=action
value=print

[loadMNIST]
type=action
value=loadMNIST

[reshapeMNIST]
type=action
value=reshapeMNIST

[normalizeMNIST]
type=action
value=normalizeMNIST

[trn_val_test_splitMNIST]
type=action
value=trn_val_test_splitMNIST

[generateTripletsMNIST]
type=action
value=generateTripletsMNIST

[generateUnrelatedGroupsMNIST]
type=action
value=generateUnrelatedGroupsMNIST

[generateExpectationMatrixMNIST]
type=action
value=generateExpectationMatrixMNIST

[toTfDatasetsMNIST]
type=action
value=toTfDatasetsMNIST

[dropColumns]
type=action
value=dropColumns

[dropOutliers]
type=action
value=dropOutliers

[remove_over_threshold]
type=action
value=remove_over_threshold

[durationSeparation]
type=action
value=durationSeparation

[windowing]
type=action
value=windowing

[listWindowing]
type=action
value=listWindowing

[windowsSeparationThreshold]
type=generic
value=dict(\'pdr_threshold\': {pdr_threshold}, \'bdr_threshold\': {bdr_threshold}, \'avg_ipt_threshold\': {avg_ipt_threshold}, \'std_ipt_threshold\': {std_ipt_threshold}, \'skw_ipt_threshold\': {skw_ipt_threshold}, \'kur_ipt_threshold\': {kur_ipt_threshold})

[windowsSeparation]
type=action
value=windowsSeparation_vmaf
kwargs='vmaf_threshold': {vmaf_threshold}, 'thresholds': '{windowsSeparationThreshold}',

[windowDropOutliers]
type=action
value=windowDropOutliers
kwargs='threshold': {vmaf_threshold}

[TrnValTstSeparation]
type=action
value=TrnValTstSeparation
kwargs='training_portion':{training_portion},'validation_portion':{validation_portion}

[BalanceSeparation]
type=action
value=BalanceSeparation
kwargs='training_portion':{training_portion},'validation_portion':{validation_portion},'training_pos_percentage':{training_pos_percentage},'validation_pos_percentage':{validation_pos_percentage},'test_pos_percentage':{test_pos_percentage}

[good_portions]
type=generic
value=({training_portion_good}, {validation_portion_good}, {test_portion_good})

[bad_portions]
type=generic
value=({training_portion_bad}, {validation_portion_bad}, {test_portion_bad})

[gray_portions]
type=generic
value=({training_portion_gray}, {validation_portion_gray}, {test_portion_gray})

[balanceNGPortion]
type=generic
value=({good_portions}, {bad_portions}, {gray_portions})

[train_percentages]
type=generic
value=({training_good_percentage}, {training_bad_percentage}, {training_gray_percentage})

[validation_percentages]
type=generic
value=({validation_good_percentage}, {validation_bad_percentage}, {validation_gray_percentage})

[test_percentages]
type=generic
value=({test_good_percentage}, {test_bad_percentage}, {test_gray_percentage})

[balanceNGPercentage]
type=generic
value=({train_percentages}, {validation_percentages}, {test_percentages})

[TestGetEverythingFlag]
type=generic
value=False

[BalanceSeparationNG]
type=action
value=BalanceSeparationNG
kwargs='portion': {balanceNGPortion},'balancing': {balanceNGPercentage}, 'test_get_everything': {TestGetEverythingFlag}

[featureMean]
type=action
value=featureMean

[featureStd]
type=action
value=featureStd

[featureMax]
type=action
value=featureMax

[featureMin]
type=action
value=featureMin

[normalize]
type=action
value=normalize

[normalizeMinMax]
type=action
value=normalizeMinMax

[generateTriplets]
type=action
value=generateTriplets

[generateTripletsNG]
type=action
value=generateTripletsNG

[generatePredictionTriplets]
type=action
value=generatePredictionTriplets

[generatePredictionTripletsReverse]
type=action
value=generatePredictionTripletsReverse

[GenerateGrayTriplets]
type=action
value=GenerateGrayTriplets

[flag_windows]
type=action
value=flag_windows
kwargs= 'pdr_threshold': {grayEvaluation_pdr_threshold}, 'bdr_threshold': {grayEvaluation_bdr_threshold}, 'avg_ipt_threshold': {grayEvaluation_avg_ipt_threshold}, 'std_ipt_threshold': {grayEvaluation_std_ipt_threshold}, 'skw_ipt_threshold': {grayEvaluation_skw_ipt_threshold}, 'kur_ipt_threshold': {grayEvaluation_kur_ipt_threshold}

[kaggleDstSeparation]
type=action
value=kaggleDataVsLabelSeparation

[kaggleShuffle]
type=action
value=kaggleShuffle

[kaggleTrnValTestSeparation]
type=action
value=kaggleTrnValTestSeparation

[generateKaggleTriplets]
type=action
value=generateKaggleTriplets

[generateKaggleCategorical]
type=action
value=generateKaggleCategorical

[load]
type=action
value=load
kwargs='dtype_backend': 'pyarrow', 'engine': 'pyarrow'

[GoodBadGraySeparation_delay_lower]
type=generic
value=20.0

[GoodBadGraySeparation_delay_upper]
type=generic
value=50.0

[GoodBadGraySeparation_drop_lower]
type=generic
value=0.05

[GoodBadGraySeparation_drop_upper]
type=generic
value=0.7

[GoodBadGraySeparation]
type=action
value=GoodBadGraySeparation
kwargs='delay_lower':{GoodBadGraySeparation_delay_lower},'delay_upper':{GoodBadGraySeparation_delay_upper},'drop_lower':{GoodBadGraySeparation_drop_lower},'drop_upper':{GoodBadGraySeparation_drop_upper}

